BUILDING AND INSTALLING

    Full instructions:
        See doc/html/building.html

    Quick instructions:
        ./bootstrap
        ./configure
        make
        make check
        sudo make install

VERSION-SPECIFIC NOTES

	Supported FIX tag value range is 1-99999999. 


SYSTEM REQUIREMENTS

    REDHAT/CENTOS 5.x

        Required: sudo yum install gcc-c++ automake autoconf libtool
		  libxml2 libxml2-devel
        Optional: sudo yum install postgresql-devel ruby-develpostgresql-server
		  mysql-server mysql-client mysql-devel libxslt

    UBUNTU

        Required: sudo apt-get install g++ automake libtool libxml2 libxml2-dev
        Optional: sudo apt-get install ruby ruby-dev libmysqlclient-dev
		  libpq-dev mysql-server postgresql xsltproc


OPTIONAL DEPENDENCIES FOR EXTRA PERFORMANCE

        Boost (www.boost.org)
        Intel Threading Building Blocks (www.threadingbuildingblocks.org)

    LINUX

        ./configure --with-boost=<path> 
           --with-tbb=<path> --with-tbb-arch=<library subdir>

        Example:

        Boost installed in /usr/local/boost
        TBB installed in /opt/intel/tbb

        ./configure --with-boost=/usr/local/boost 
               --with-tbb=/opt/intel/tbb
               --with-tbb-arch=intel64/gcc4.4

        There are two field map configuration options available

        --with-fieldmap={ avl, flat }

        Default configuration uses a custom implementation of intrusive AVL tree
        with embedded singly linked list. AVL map can be used with an additional
        option which permits a certain number of unordered fields in the outgoing
        message body.

        --with-relaxed-ordering={ 8, 16 }

    WINDOWS

        Configure Boost and TBB settings by changing User Macros
        defined in OptionalSettings_vs9.vsprops for Visual Studio 2008 or 
        OptionalSettings_vs11.props for Visual Studio 2012 via Property Manager
        or manually. 

        Example:

        BOOST_INCLUDE      C:\boost
        TBB_INCLUDE        C:\tbb42_20130725oss\include
        BOOST_LIB          C:\boost\lib32-msvc-11.0
        TBB_LIB            C:\tbb42_20130725oss\lib\ia32\vc11
        TBB_DEPS           tbb.lib;tbbmalloc.lib
        WITH_BOOST         HAVE_BOOST=1
        WITH_TBB           HAVE_TBB=1

        Then continue with the build using DebugBoost or ReleaseBoost build targets.

PLATFORM-SPECIFIC NOTES

        Use --with-sso configure option to enable short string optimization on platforms
        which use GLIBC for extra 15-20% improvement. This does not apply to g++ versions
        5.2 and above or Visual Studio builds as string implementations shipped with them
        already employ this optimization.

        Recommended environment for G++ on Nehalem and above:
        CXXFLAGS="-O3 -march=core2 -msse4.2 -falign-functions=16 -falign-jumps=16" or
		 "-O3 -march=corei7-avx -mavx -falign-functions=16 -falign-jumps=16"
	if AVX support is available.

        Using g++ 4.7.x is not recommenced as there is a sizable performance regression
	compared to versions 4.4.x or 4.8.x.

        Visual Studio builds need to use /Ox optimization level for best performance.

BENCHMARKS

System: Intel(R) Xeon(R) CPU E5-2690 0 @ 2.90GHz, CentOS 6.4, 
	running with sleep states disabled (performance-latency profile)

	g++ version: 4.8.3

Configuration:

	fix8 1.3.2	--with-tbb --with-mpmc=tbb
	Quickfix 1.13.3 --with-boost
	Quickfix 1.14.3 --with-boost --with-tbb --with-allocator=tbb
	quickerfix:	--with-boost --with-sso --with-tbb --with-allocator=tbb

	g++ options: -O3 -march=corei7-avx -mavx -falign-functions=16 -falign-jumps=16

	Lockless allocator library (locklessinc.com/downloads).

CODEC:	Measures encoding and decoding performance for a NewOrderSingle message.
	examples/codec/codec.cpp

	Command line:
	LD_PRELOAD=libllalloc.so taskset -c 9 ./codec
	LD_PRELOAD=libllalloc.so taskset -c 9 ./codec ../../spec/FIX44.xml

	Results (usec per message, lower is better):

		FIX8		Quickfix 	Quickfix 	quickerfix
		1.3.2		1.13.3		1.14.3		20170801

to string	2.25516		8.17674		4.38878		0.803967
from string	7.6158		25.7686		9.422		1.9427



PT:	Measures performance of various QuickFix subsystems
	src/pt.cpp

	Command line:
	LD_PRELOAD=libllalloc.so taskset -c 1,9 ./pt -p 1234 -c 1000000

	Results (operations per second, higher is better):

				Quickfix 	Quickfix 	quickerfix 
				1.13.3		1.14.3		20170801

Converting integers to strings:	2.17391e+07	2.5e+07		2.28571e+07

Converting strings to integers:	1.66667e+08	2.5e+08		3.0986e+08

Converting doubles to strings:	1.10375e+06	1.04712e+06	9.37129e+06

Converting strings to doubles:	4.6729e+06	5.26316e+07	1.04153e+08

Creating Heartbeat messages:	1.00604e+06	1.54083e+06	5.6597e+06

Identifying message types:	6.99301e+06	6.99301e+06	1.20404e+07

Serializing Heartbeat messages
to strings:			847458		1.20627e+06	3.44907e+06

Serializing Heartbeat messages
from strings:			392003		625391		3.32179e+06

Serializing Heartbeat messages
from strings and validation:	-		541419		2.58592e+06

Creating NewOrderSingle
messages:			331785		406669		1.80556e+06
 (packed):			-		-		1.98053e+06

Serializing NewOrderSingle
messages to strings:		652316		925069		2.6223e+06

Serializing NewOrderSingle
messages from strings:		152346		290698		1.52303e+06

Serializing NewOrderSingle
messages from strings
and validation:			-		261438		1.30501e+06

Creating QuoteRequest
messages:			13621.9		20406.5		58347.2
 (packed):			-		-		91869.1
 (packed, in place):		-		-		150536

Serializing QuoteRequest
messages to strings:		174490		239292		590509

Serializing QuoteRequest
messages from strings:		16942.8		32526.7		149703

Serializing QuoteRequest
messages from strings
and validation:			-		30869		129908

Reading fields
from QuoteRequest message:	28681.2		72695.6		129876

Storing NewOrderSingle
messages:			299670		281057		330621

Validating NewOrderSingle
messages without
data dictionary:		5.64972e+06	5.74713e+06	1.18313e+07

Validating NewOrderSingle
messages with data dictionary:	345901		457247		1.73791e+06

Validating QuoteRequest
messages without
data dictionary:		9.80392e+06	9.34579e+06	1.56412e+07

Validating QuoteRequest
messages with data dictionary:	478240		548847		1.55463e+06

Sending/Receiving
NewOrderSingle/ExecutionReports
on Socket			59883.8		92489.8		354106

Sending/Receiving
NewOrderSingle/ExecutionReport
on ThreadedSocket		59862.3		92850.5		403000

Sending/Receiving
NewOrderSingle/ExecutionReports
on Socket with data dictionary	-		70681.4		279351

Sending/Receiving
NewOrderSingle/ExecutionReports
on ThreadedSocket
with data dictionary		-		73367.6		283215



